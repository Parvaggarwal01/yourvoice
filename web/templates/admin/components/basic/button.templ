package basic

import (
	"yourvoice/internal/utils"
)

type ActionProps struct {
	ID         string // Optional ID for the button
	Label      string
	OnClick    templ.ComponentScript
	Type       string
	Icon       string
	Style      string           // Use Action style constants
	Size       string           // Use Size constants (defaults to medium)
	Attributes templ.Attributes // Additional HTML attributes
}

const BasicActionStyle = "inline-flex items-center justify-center font-medium rounded-md transition-colors cursor-pointer"

templ ActionButton(props ActionProps) {
	<button
		id={ props.ID }
		onclick={ props.OnClick }
		type={ props.Type }
		class={
			BasicActionStyle,
			getActionSizeClass(props.Size),
			props.Style,
		}
		{ props.Attributes... }
	>
		if props.Icon != "" {
			<span class={ getIconMarginClass(props.Size) }>{ props.Icon }</span>
		}
		{ props.Label }
	</button>
}

type LinkActionProps struct {
	Label string
	Href  string
	Icon  string
	Style string // Use Action style constants
	Size  string // Use Size constants (defaults to medium)
}

templ ActionLink(props LinkActionProps) {
	<a
		href={ templ.SafeURL(props.Href) }
		class={
			BasicActionStyle,
			getActionSizeClass(props.Size),
			props.Style,
		}
	>
		if props.Icon != "" {
			<span class={ getIconMarginClass(props.Size) }>{ props.Icon }</span>
		}
		{ props.Label }
	</a>
}

func getActionSizeClass(size string) string {
	switch size {
	case utils.SizeSmall:
		return "px-2 py-1 text-xs h-7"
	case utils.SizeLarge:
		return "px-6 py-3 text-base h-12"
	case utils.SizeFull:
		return "px-8 py-4 text-lg h-14"
	default: // utils.SizeMedium or empty
		return "px-4 py-2 text-sm h-10"
	}
}

func getIconMarginClass(size string) string {
	switch size {
	case utils.SizeSmall:
		return "mr-1"
	case utils.SizeLarge:
		return "mr-3"
	case utils.SizeFull:
		return "mr-4"
	default: // utils.SizeMedium or empty
		return "mr-2"
	}
}
