package components

import (
	"yourvoice/web/templates/admin/components/basic"
	"yourvoice/internal/utils"
)

type DialogProps struct {
	Active  bool   // Whether the dialog is currently active
	Title   string // Dialog title
	Message string // Dialog message/content
	Type    string // confirm or acknowledge
	Style   string // Optional style for the dialog
}

templ Dialog() {
	<!-- Dialog backdrop -->
	<div
		x-cloak
		x-show={ "dialog.Active" }
		class={ "fixed inset-0 bg-black/80 z-40" }
	></div>
	<!-- Dialog container -->
	<div
		x-cloak
		x-show={ "dialog.Active" }
		class={ "fixed inset-0 z-50 flex items-center justify-center p-4" }
		x-on:click="dialog.Active = false"
	>
		<div onclick="event.stopPropagation()">
			@basic.Card(
				basic.CardProps{
					Title:           "include",
					TitleAttributes: templ.Attributes{"x-text": "dialog.Title"},
					Classes:         "max-w-md",
				},
			) {
				<div class="space-y-6">
					<!-- Dialog Message -->
					<p x-text="dialog.Message" class="text-slate-300">Message</p>
					<!-- Dialog Actions -->
					<div class="flex justify-end pt-4 space-x-3">
						@basic.ActionButton(basic.ActionProps{
							Label: "Cancel",
							Style: utils.ActionStyleSecondary,
							Attributes: templ.Attributes{
								"x-show":     "dialog.Type === '" + utils.DialogTypeConfirm + "'",
								"x-on:click": "dialog.Active = false",
							},
						})
						<!-- Single OK button for acknowledgment dialogs -->
						@basic.ActionButton(basic.ActionProps{
							Label: "OK",
							Attributes: templ.Attributes{
								":class":     "dialog.Style ? dialog.Style : '" + utils.ActionStylePrimary + "'",
								"x-on:click": "dialog.Active = false",
							},
						})
					</div>
				</div>
			}
		</div>
	</div>
}
